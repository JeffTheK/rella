require 'rake/clean'

CXX = 'g++'

SRC_FILES = Dir.glob('src/**').reject{ |f| f.end_with?('.hpp') || f == 'src/main.cpp' }.join(' ')
TEST_FILES = 'test/**.cpp'

CLEAN.include 'bin/**'

task :debug do
    DEBUG_FLAGS = '-Wall -Wextra -static-libstdc++ -O0 -g'
    OUT = '-o bin/debug'
    system('rake clean')
    system("#{CXX} #{DEBUG_FLAGS} #{SRC_FILES} src/main.cpp #{OUT}")
end

task :test do
    TEST_FLAGS = '-Wall -Wextra -static-libstdc++ -O0 -g'
    OUT = '-o bin/test'
    system('rake clean')
    system("#{CXX} #{TEST_FLAGS} #{SRC_FILES} #{TEST_FILES} #{OUT}")
    system("./bin/test")
end

##
#   HELP TASKS
#
#   note: we use exit at the end to stop rake from treating arguments as other tasks
##

task :add_test do
    file_name = ARGV[1]
    raise('file already exists') if (File.exist?("test/#{file_name}"))

    text = <<-TEXT
#include "../include/doctest.h"
#include "../src/#{file_name}.hpp"

TEST_CASE("") {

}
TEXT

    File.open("test/#{file_name}_test.cpp", 'w') do |f|
        f << text
    end
    exit
end

task :add_json_test do
    file_name = ARGV[1]   

    text = <<-TEXT
TEST_CASE("load_from_json") {
    auto text = R"(
{
    "type": "Comp",
    
}
    )";
  
    auto comp_json = nlohmann::json::parse(text);
    auto comp = Position::load_from_json(comp_json);
}
TEXT

    File.open("test/#{file_name}_test.cpp", 'a') do |f|
        f << text
    end

    exit
end

task :add_class do
    file_name = ARGV[1]
    raise('file already exists') if (File.exist?("src/#{file_name}.hpp"))

    text = <<-TEXT
#pragma once

class #{file_name} {
public:

private:

};
TEXT

    File.open("src/#{file_name}.hpp", 'w') do |f|
        f << text
    end
    exit
end

task :add_component do
    file_name = ARGV[1]
    raise('file already exists') if (File.exist?("src/#{file_name}.hpp"))

    text = <<-TEXT
#pragma once

#include "component.hpp"

class #{file_name} : Component<#{file_name}> {
public:

private:

};
TEXT

    File.open("src/#{file_name}.hpp", 'w') do |f|
        f << text
    end
    exit
end